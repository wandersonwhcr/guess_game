services:

  proxy:
    image: nginx:1.29-alpine
    container_name: ${COMPOSE_PROJECT_NAME}_proxy
    restart: on-failure
    configs:
      - source: proxy-nginx-template-default
        target: /etc/nginx/templates/default.conf.template
    networks:
      proxy:
    ports:
      - 3000:3000
      - 5000:5000

  frontend:
    image: guess_game_frontend:v1.0
    restart: on-failure
    networks:
      proxy:
    environment:
      REACT_APP_BACKEND_URL: http://localhost:5000

  backend:
    image: guess_game_backend:v1.0
    restart: on-failure
    networks:
      proxy:
      backend:
    environment:
      FLASK_DB_TYPE: postgres
      FLASK_DB_USER: postgres
      FLASK_DB_NAME: postgres
      FLASK_DB_PASSWORD: postgres
      FLASK_DB_HOST: database
      FLASK_DB_PORT: 5432
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:17.5-alpine
    restart: on-failure
    networks:
      backend:
    volumes:
      - database-postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ CMD, pg_isready, --username=postgres ]
      interval: 3s
      timeout: 1s
      retries: 10

configs:
  proxy-nginx-template-default:
    file: ./docker-compose/proxy/configs/nginx-template-default.conf

networks:
  proxy:
  backend:

volumes:
  database-postgres-data:
